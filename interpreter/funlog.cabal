-- Initial funlog.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

name:                funlog
version:             0.1.0.0
-- synopsis:            
-- description:         
license:             GPL-3
license-file:        LICENSE
author:              Krzysztof Pszeniczny
maintainer:          krzysztof.pszeniczny@gmail.com
-- copyright:           
category:            Language
build-type:          Simple
-- extra-source-files:  
cabal-version:       >=1.10

library
  exposed-modules:     Language.FunLog.Syntax
                       Language.FunLog.Parser
                       Language.FunLog.Eval
                       Language.FunLog.Typecheck
                       Language.FunLog.Types
                       Language.FunLog.OrderDecls
                       Language.FunLog.Exhaustiveness
  build-depends:       base >=4.8 && <4.9,
                       parsec >=3.1 && <3.2,
                       pretty >=1.1 && <1.2,
                       lens >=4.0 && <5.0,
                       mtl >=2.2 && <2.3,
                       transformers >=0.4 && <0.6,
                       unordered-containers >=0.2 && <0.3,
                       hashable >=1.2 && <1.3
  hs-source-dirs:      src
  default-language:    Haskell2010
  ghc-options:         -Wall -Werror

executable funlog
  main-is:             Main.hs
  other-modules:       TH
  build-depends:       base >=4.8 && <4.9,
                       parsec >=3.1 && <3.2,
                       pretty >=1.1 && <1.2,
                       template-haskell >=2.10 && <2.12,
                       transformers >=0.4 && <0.6,
                       funlog
  default-language:    Haskell2010

test-suite spec
    type:              exitcode-stdio-1.0
    main-is:           Spec.hs
    build-depends:     funlog,
                       base >=4.8 && <4.9,
                       hspec >=2.2 && <2.3,
                       parsec >=3.1 && <3.2
    default-language:  Haskell2010
    hs-source-dirs:    test
    other-modules:     UnificationSpec
                       TypecheckerSpec
